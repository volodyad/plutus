cabal-version: 2.2
name: plutus-tx-plugin
version: 0.1.0.0
license: Apache-2.0
license-files:
  LICENSE
  NOTICE
maintainer: michael.peyton-jones@iohk.io
author: Michael Peyton Jones
synopsis: The Plutus Tx compiler and GHC plugin
description:
    The Plutus Tx compiler and GHC plugin.
category: Language
build-type: Simple
extra-doc-files: README.md

source-repository head
    type: git
    location: https://github.com/input-output-hk/plutus

common lang
    default-language: Haskell2010
    default-extensions: ExplicitForAll ScopedTypeVariables
                        DeriveGeneric StandaloneDeriving DeriveLift
                        GeneralizedNewtypeDeriving DeriveFunctor DeriveFoldable
                        DeriveTraversable
    ghc-options: -Wall -Wnoncanonical-monad-instances
                 -Wincomplete-uni-patterns -Wincomplete-record-updates
                 -Wredundant-constraints -Widentities
                 -Wunused-packages
                 -- See Plutus Tx readme
                 -fobject-code -fno-ignore-interface-pragmas -fno-omit-interface-pragmas

flag ghcjs-plugin
  description: build the plugin for GHCJS instead of GHC
  default:     True
  manual:      True

library
    import: lang
    if os(windows)
        buildable: False
    -- For ghcjs (where we have some hope of this to work), we use a rather
    -- peculiar hack.  We pretend this package exists.  So most of ghcjs is
    -- trivially happy, but then when it's loaded, we'll swap it out for the
    -- natively (e.g. not cross compiled like ghcjs results) package, such that
    -- ghcjs can load the plugin and execute it natively.
    if(impl(ghcjs))
        hs-source-dirs: cross-src
        exposed-modules:
            PlutusTx.Plugin
        build-depends:
            base >=4.9 && <5,
            plutus-ghc-stub
    else
        hs-source-dirs: src
        exposed-modules:
            PlutusTx.Plugin
            PlutusTx.Compiler.Error
        other-modules:
            PlutusTx.Compiler.Binders
            PlutusTx.Compiler.Builtins
            PlutusTx.Compiler.Expr
            PlutusTx.Compiler.Kind
            PlutusTx.Compiler.Laziness
            PlutusTx.Compiler.Names
            PlutusTx.Compiler.Primitives
            PlutusTx.Compiler.Type
            PlutusTx.Compiler.Types
            PlutusTx.Compiler.Utils
            PlutusTx.PIRTypes
            PlutusTx.PLCTypes
        build-depends:
            base >=4.9 && <5,
            bytestring -any,
            containers -any,
            extra -any,
            flat -any,
            ghc-prim -any,
            plutus-core -any,
            lens -any,
            mtl -any,
            prettyprinter -any,
            template-haskell -any,
            text -any,
            transformers -any,
            plutus-tx -any
        if(flag(ghcjs-plugin))
            build-depends: ghcjs >=8.10 && <9
        else
            build-depends: ghc >=8.10 && <9


test-suite plutus-tx-tests
    if os(windows)
        buildable: false
    type: exitcode-stdio-1.0
    hs-source-dirs: test
    main-is: Spec.hs
    other-modules:
        Lift.Spec
        Plugin.Spec
        Plugin.Basic.Spec
        Plugin.Data.Spec
        Plugin.Errors.Spec
        Plugin.Functions.Spec
        Plugin.Laziness.Spec
        Plugin.Primitives.Spec
        Plugin.Typeclasses.Spec
        Plugin.Typeclasses.Lib
        Plugin.Lib
        StdLib.Spec
        TH.Spec
        TH.TestTH
        Lib
    default-language: Haskell2010
    build-depends:
        base >=4.9 && <5,
        flat -any,
        deepseq -any,
        integer-gmp -any,
        plutus-core -any,
        plutus-tx -any,
        plutus-tx-plugin -any,
        prettyprinter -any,
        mtl -any,
        bytestring -any,
        serialise -any,
        template-haskell -any,
        tasty -any,
        tasty-hunit -any,
        tasty-hedgehog -any,
        hedgehog -any,
        lens -any,
        ghc-prim -any,
    -- this makes the plugin give better errors
    ghc-options: -g
